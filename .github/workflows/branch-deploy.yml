name: branch-deploy

on:
  issue_comment:
    types: [created]

permissions:
  pull-requests: write
  deployments: write
  contents: write
  checks: read
  statuses: read

jobs:
  branch-deploy:
    if: ${{ github.event.issue.pull_request }} # only run on pull request comments
    runs-on: ubuntu-latest

    steps:
      - uses: github/branch-deploy@main
        id: branch-deploy
        with:
          #admins: 'grantbirki'
          sticky_locks: true
          trigger: ".deploy"
          production_environments: production
          environment_targets: "production,stage,dev"
          commit_verification: true
          stable_branch: 'main'
          environment: "production"
          checks: 'quality_gate'
          #allow_sha_deployments: true
          #checks: 'required'
          #ignored_checks: 'test1,test3'

      # Checkout your projects repository based on the ref provided by the branch-deploy step
      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.branch-deploy.outputs.sha }}

      # Do some fake "noop" deployment logic here
      # conditionally run a noop deployment
      - name: fake noop deploy
        if: ${{ steps.branch-deploy.outputs.continue == 'true' && steps.branch-deploy.outputs.noop == 'true' }}
        run: |
          echo "I am doing a fake noop deploy"
          echo "noop -> sha: ${{ steps.branch-deploy.outputs.sha }} ref: ${{ steps.branch-deploy.outputs.ref }}"
          echo "Current branch: $(git branch --show-current)"
          echo "Current commit SHA: $(git rev-parse HEAD)"
          echo "===================="
          echo "contents of the README.md:"
          cat README.md
          echo "===================="
          echo "contents of the noop file:"
          cat noop

      # Do some fake "regular" deployment logic here
      # conditionally run a regular deployment
      - name: fake regular deploy
        if: ${{ steps.branch-deploy.outputs.continue == 'true' && steps.branch-deploy.outputs.noop != 'true' }}
        run: |
          echo "I am doing a fake regular deploy"
          echo "params: ${{ steps.branch-deploy.outputs.params }}"
          echo "parsed_params: ${{ steps.branch-deploy.outputs.parsed_params }}"
          echo "===================="
          echo "deployed -> sha: ${{ steps.branch-deploy.outputs.sha }} ref: ${{ steps.branch-deploy.outputs.ref }}"
          echo "Current branch: $(git branch --show-current)"
          echo "Current commit SHA: $(git rev-parse HEAD)"
          echo "===================="
          echo "contents of the README.md:"
          cat README.md
          echo "===================="
          echo "contents of the noop file:"
          cat noop
